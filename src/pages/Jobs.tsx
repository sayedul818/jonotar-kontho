import Header from "@/components/Header";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Search, MapPin, Clock, Building, Users, DollarSign } from "lucide-react";
import { useState } from "react";
import Footer from "@/components/footer";

const Jobs = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("‡¶∏‡¶¨");

  const categories = ["‡¶∏‡¶¨", "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø", "‡¶¨‡ßá‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø", "‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï", "‡¶è‡¶®‡¶ú‡¶ø‡¶ì", "‡¶Ü‡¶á‡¶ü‡¶ø", "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ"];

  const jobListings = [
    {
      id: 1,
      title: "‡¶∏‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡¶∞ ‡¶∏‡¶´‡¶ü‡¶ì‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶á‡¶û‡ßç‡¶ú‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞",
      company: "‡¶ü‡ßá‡¶ï ‡¶∏‡¶≤‡¶ø‡¶â‡¶∂‡¶®‡¶∏ ‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶°",
      logo: "üè¢",
      location: "‡¶¢‡¶æ‡¶ï‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶ï‡¶æ‡¶≤‡ßÄ‡¶®",
      salary: "‡ßÆ‡ß¶,‡ß¶‡ß¶‡ß¶ - ‡ßß,‡ß®‡ß¶,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ß©‡ßß ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      category: "‡¶Ü‡¶á‡¶ü‡¶ø",
      description: "‡¶∞‡¶ø‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü, ‡¶®‡ßã‡¶°.‡¶ú‡ßá‡¶è‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶™‡¶æ‡¶á‡¶•‡¶®‡ßá ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§",
      experience: "‡ß©-‡ß´ ‡¶¨‡¶õ‡¶∞",
      education: "‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶∏‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï",
      postedDate: "‡ß´ ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá"
    },
    {
      id: 2,
      title: "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶æ‡¶∞",
      company: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      logo: "üè¶",
      location: "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶ï‡¶æ‡¶≤‡ßÄ‡¶®",
      salary: "‡ß´‡ß¶,‡ß¶‡ß¶‡ß¶ - ‡ß≠‡ß¶,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ß®‡ßÆ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      category: "‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï",
      description: "‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡¶ø‡¶Ç ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§",
      experience: "‡ß®-‡ß™ ‡¶¨‡¶õ‡¶∞",
      education: "‡¶¨‡¶ø‡¶¨‡¶ø‡¶è/‡¶è‡¶Æ‡¶¨‡¶ø‡¶è (‡¶´‡¶ø‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏)",
      postedDate: "‡ß© ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá"
    },
    {
      id: 3,
      title: "‡¶™‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶™ ‡¶∏‡¶Æ‡¶®‡ßç‡¶¨‡¶Ø‡¶º‡¶ï‡¶æ‡¶∞‡ßÄ",
      company: "‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï",
      logo: "ü§ù",
      location: "‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶ö‡ßÅ‡¶ï‡ßç‡¶§‡¶ø‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï",
      salary: "‡ß¨‡ß¶,‡ß¶‡ß¶‡ß¶ - ‡ßÆ‡ß¶,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ßß‡ß´ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      category: "‡¶è‡¶®‡¶ú‡¶ø‡¶ì",
      description: "‡¶â‡¶®‡ßç‡¶®‡¶Ø‡¶º‡¶® ‡¶™‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶™ ‡¶™‡¶∞‡¶ø‡¶ö‡¶æ‡¶≤‡¶®‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶ï‡¶æ‡¶ú‡ßá ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ‡•§",
      experience: "‡ß©-‡ß¨ ‡¶¨‡¶õ‡¶∞",
      education: "‡¶∏‡¶æ‡¶Æ‡¶æ‡¶ú‡¶ø‡¶ï ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá ‡¶Æ‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡ßç‡¶∏",
      postedDate: "‡ßß ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá"
    },
    {
      id: 4,
      title: "‡¶∏‡¶π‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï",
      company: "‡¶¢‡¶æ‡¶ï‡¶æ ‡¶∞‡ßá‡¶∏‡¶ø‡¶°‡ßá‡¶®‡¶∏‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤ ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶ï‡¶≤‡ßá‡¶ú",
      logo: "üéì",
      location: "‡¶¢‡¶æ‡¶ï‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶ï‡¶æ‡¶≤‡ßÄ‡¶®",
      salary: "‡ß©‡ß´,‡ß¶‡ß¶‡ß¶ - ‡ß™‡ß´,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ß®‡ß¶ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      category: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ",
      description: "‡¶ó‡¶£‡¶ø‡¶§ ‡¶ì ‡¶™‡¶¶‡¶æ‡¶∞‡ßç‡¶•‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï ‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§",
      experience: "‡ßß-‡ß© ‡¶¨‡¶õ‡¶∞",
      education: "‡¶¨‡¶ø‡¶è‡¶∏‡¶∏‡¶ø (‡¶ó‡¶£‡¶ø‡¶§/‡¶™‡¶¶‡¶æ‡¶∞‡ßç‡¶•)",
      postedDate: "‡ß® ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá"
    },
    {
      id: 5,
      title: "‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞",
      company: "‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßÄ‡¶£‡¶´‡ßã‡¶®",
      logo: "üì±",
      location: "‡¶∏‡¶ø‡¶≤‡ßá‡¶ü, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶ï‡¶æ‡¶≤‡ßÄ‡¶®",
      salary: "‡ß®‡ßÆ,‡ß¶‡ß¶‡ß¶ - ‡ß©‡ß´,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ßß‡ß¶ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      category: "‡¶¨‡ßá‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø",
      description: "‡¶≠‡¶æ‡¶≤ ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø‡¶§‡ßá ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§",
      experience: "‡ß¶-‡ß® ‡¶¨‡¶õ‡¶∞",
      education: "‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï",
      postedDate: "‡ß™ ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá"
    },
    {
      id: 6,
      title: "‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶π‡ßÄ ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞",
      company: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞",
      logo: "üèõÔ∏è",
      location: "‡¶Ø‡¶∂‡ßã‡¶∞, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
      type: "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø",
      salary: "‡ß´‡ß¨,‡ß¶‡ß¶‡ß¶ - ‡ßÆ‡ß®,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ",
      deadline: "‡ß´ ‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      category: "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø",
      description: "‡ß©‡ßÆ‡¶§‡¶Æ ‡¶¨‡¶ø‡¶∏‡¶ø‡¶è‡¶∏ ‡¶™‡ßç‡¶∞‡¶∂‡¶æ‡¶∏‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶¶‡•§",
      experience: "‡¶¨‡¶ø‡¶∏‡¶ø‡¶è‡¶∏ ‡¶™‡¶æ‡¶∏",
      education: "‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï",
      postedDate: "‡ßß ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π ‡¶Ü‡¶ó‡ßá"
    }
  ];

  const filteredJobs = jobListings.filter(job => 
    (selectedCategory === "‡¶∏‡¶¨" || job.category === selectedCategory) &&
    (searchTerm === "" || 
     job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
     job.company.toLowerCase().includes(searchTerm.toLowerCase()))
  );

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <main className="container mx-auto px-4 py-6">
        {/* Page Header */}
        <div className="mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-foreground mb-4 bn-text">
            ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø‡¶∞ ‡¶ñ‡¶¨‡¶∞
          </h1>
          <p className="text-muted-foreground bn-text">
            ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø‡¶∞ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó ‡¶ì ‡¶®‡¶ø‡¶Ø‡¶º‡ßã‡¶ó ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶™‡ßç‡¶§‡¶ø
          </p>
        </div>

        {/* Search & Filter */}
        <div className="mb-8 space-y-4">
          <div className="flex flex-col md:flex-row gap-4">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
              <Input
                placeholder="‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 bn-text"
              />
            </div>
          </div>
          
          <div className="flex flex-wrap gap-2">
            {categories.map((category) => (
              <Badge
                key={category}
                variant={selectedCategory === category ? "default" : "outline"}
                className={`cursor-pointer transition-colors bn-text ${
                  selectedCategory === category 
                    ? "bg-primary text-white" 
                    : "hover:bg-primary/10"
                }`}
                onClick={() => setSelectedCategory(category)}
              >
                {category}
              </Badge>
            ))}
          </div>
        </div>

        {/* Job Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
          <Card className="text-center">
            <CardContent className="pt-6">
              <div className="text-2xl font-bold text-primary">{filteredJobs.length}</div>
              <p className="text-sm text-muted-foreground bn-text">‡¶Æ‡ßã‡¶ü ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø</p>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="pt-6">
              <div className="text-2xl font-bold text-primary">‡ßß‡ß®</div>
              <p className="text-sm text-muted-foreground bn-text">‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßã‡¶∏‡ßç‡¶ü</p>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="pt-6">
              <div className="text-2xl font-bold text-primary">‡ßÆ‡ß´</div>
              <p className="text-sm text-muted-foreground bn-text">‡¶ï‡ßã‡¶Æ‡ßç‡¶™‡¶æ‡¶®‡¶ø</p>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="pt-6">
              <div className="text-2xl font-bold text-primary">‡ß™‡ß®</div>
              <p className="text-sm text-muted-foreground bn-text">‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø</p>
            </CardContent>
          </Card>
        </div>

        {/* Job Listings */}
        <div className="space-y-6">
          {filteredJobs.map((job) => (
            <Card key={job.id} className="hover:shadow-lg transition-shadow">
              <CardHeader>
                <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                  <div className="flex items-start gap-4">
                    <div className="text-3xl">{job.logo}</div>
                    <div className="flex-1">
                      <CardTitle className="text-lg md:text-xl mb-2 bn-text hover:text-primary cursor-pointer">
                        {job.title}
                      </CardTitle>
                      <div className="flex flex-wrap items-center gap-4 text-sm text-muted-foreground">
                        <div className="flex items-center gap-1">
                          <Building className="h-4 w-4" />
                          <span className="bn-text">{job.company}</span>
                        </div>
                        <div className="flex items-center gap-1">
                          <MapPin className="h-4 w-4" />
                          <span className="bn-text">{job.location}</span>
                        </div>
                        <div className="flex items-center gap-1">
                          <Clock className="h-4 w-4" />
                          <span className="bn-text">{job.type}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="flex flex-col items-end gap-2">
                    <Badge className="bg-primary/10 text-primary bn-text">
                      {job.category}
                    </Badge>
                    <div className="text-sm text-muted-foreground bn-text">
                      {job.postedDate}
                    </div>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4 bn-text">{job.description}</p>
                
                <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
                  <div>
                    <div className="flex items-center gap-1 mb-1">
                      <DollarSign className="h-4 w-4 text-primary" />
                      <span className="text-sm font-medium bn-text">‡¶¨‡ßá‡¶§‡¶®</span>
                    </div>
                    <p className="text-sm text-muted-foreground bn-text">{job.salary}</p>
                  </div>
                  <div>
                    <div className="flex items-center gap-1 mb-1">
                      <Users className="h-4 w-4 text-primary" />
                      <span className="text-sm font-medium bn-text">‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ</span>
                    </div>
                    <p className="text-sm text-muted-foreground bn-text">{job.experience}</p>
                  </div>
                  <div>
                    <div className="flex items-center gap-1 mb-1">
                      <Clock className="h-4 w-4 text-primary" />
                      <span className="text-sm font-medium bn-text">‡¶∂‡ßá‡¶∑ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</span>
                    </div>
                    <p className="text-sm text-red-600 bn-text">{job.deadline}</p>
                  </div>
                  <div className="md:col-span-2 lg:col-span-1">
                    <Button className="w-full bn-text">
                      ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Load More */}
        <div className="text-center mt-8">
          <Button variant="outline" className="bn-text">
            ‡¶Ü‡¶∞‡¶ì ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          </Button>
        </div>
      </main>
      <Footer></Footer>
    </div>
  );
};

export default Jobs;